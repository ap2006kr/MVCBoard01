@model  MVCBoard.Models.BoardViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Board</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Board.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Board.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Board.Content)
        </dt>

        <dd>

            @Html.Raw(Model.Board.Content)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Board.CreatedTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Board.CreatedTime)
        </dd>

    </dl>
</div>
<div>
    <hr />
    @using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
    new { @id = "replyform" }))
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Reply</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Reply.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reply.Content, new { htmlAttributes = new { @id = "ReplyContent", @type = "hidden", @class = "form-control" } })
                <div id="summernote"></div>
                @Html.ValidationMessageFor(model => model.Reply.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.EditorFor(model => model.Reply.BoardId, new { htmlAttributes = new { @type = "hidden", @class = "form-control" } })
        @Html.EditorFor(model => model.Reply.BoardKey, new { htmlAttributes = new { @type = "hidden", @class = "form-control" } })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</div>
<div>
    <ul class="list-group">
        @foreach (var item in Model.Replies)
        {
            
        <li class="list-group-item">
            @Html.Raw(item.Content)
         
        </li>
           
        }

    </ul>
   
 </div>
  
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Board.ID }) |
    @Html.ActionLink("Back to List", "ViewIndex", new { boardKey = Model.Reply.BoardKey })
</p>
@section Scripts {
    
    <script>
    $('#summernote').summernote(
        {
            tabsize: 2,
            height: 100
        });
        $("#replyform").submit(function () {
        var makupStr = $('#summernote').summernote('code');
        $("#ReplyContent").val(makupStr)
    })
    </script>
}